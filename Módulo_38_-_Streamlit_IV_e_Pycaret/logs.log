2025-05-24 17:07:32,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:07:32,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:07:32,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:07:32,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:36:27,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:36:27,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:36:27,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 17:36:27,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:22:27,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:22:27,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:22:27,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:22:27,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:25:07,574:INFO:PyCaret ClassificationExperiment
2025-05-24 18:25:07,575:INFO:Logging name: clf-default-name
2025-05-24 18:25:07,575:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-05-24 18:25:07,575:INFO:version 3.3.2
2025-05-24 18:25:07,575:INFO:Initializing setup()
2025-05-24 18:25:07,575:INFO:self.USI: 8095
2025-05-24 18:25:07,575:INFO:self._variable_keys: {'_ml_usecase', 'target_param', 'y_test', 'fold_generator', 'data', 'seed', 'pipeline', 'idx', 'y_train', 'fix_imbalance', 'is_multiclass', 'fold_groups_param', '_available_plots', 'log_plots_param', 'html_param', 'X_test', 'exp_name_log', 'USI', 'fold_shuffle_param', 'gpu_param', 'X_train', 'logging_param', 'gpu_n_jobs_param', 'y', 'memory', 'exp_id', 'n_jobs_param', 'X'}
2025-05-24 18:25:07,575:INFO:Checking environment
2025-05-24 18:25:07,575:INFO:python_version: 3.11.11
2025-05-24 18:25:07,575:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-05-24 18:25:07,575:INFO:machine: AMD64
2025-05-24 18:25:07,575:INFO:platform: Windows-10-10.0.26100-SP0
2025-05-24 18:25:07,578:INFO:Memory: svmem(total=8494747648, available=917164032, percent=89.2, used=7577583616, free=917164032)
2025-05-24 18:25:07,580:INFO:Physical Core: 4
2025-05-24 18:25:07,580:INFO:Logical Core: 8
2025-05-24 18:25:07,580:INFO:Checking libraries
2025-05-24 18:25:07,580:INFO:System:
2025-05-24 18:25:07,580:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-05-24 18:25:07,580:INFO:executable: c:\Users\earap\anaconda3\envs\pycaret-env\python.exe
2025-05-24 18:25:07,580:INFO:   machine: Windows-10-10.0.26100-SP0
2025-05-24 18:25:07,580:INFO:PyCaret required dependencies:
2025-05-24 18:25:07,585:INFO:                 pip: 25.1
2025-05-24 18:25:07,585:INFO:          setuptools: 78.1.1
2025-05-24 18:25:07,585:INFO:             pycaret: 3.3.2
2025-05-24 18:25:07,585:INFO:             IPython: 9.2.0
2025-05-24 18:25:07,586:INFO:          ipywidgets: 8.1.7
2025-05-24 18:25:07,586:INFO:                tqdm: 4.67.1
2025-05-24 18:25:07,586:INFO:               numpy: 1.26.4
2025-05-24 18:25:07,586:INFO:              pandas: 2.1.4
2025-05-24 18:25:07,586:INFO:              jinja2: 3.1.6
2025-05-24 18:25:07,586:INFO:               scipy: 1.11.4
2025-05-24 18:25:07,587:INFO:              joblib: 1.3.2
2025-05-24 18:25:07,587:INFO:             sklearn: 1.4.2
2025-05-24 18:25:07,587:INFO:                pyod: 2.0.5
2025-05-24 18:25:07,587:INFO:            imblearn: 0.13.0
2025-05-24 18:25:07,587:INFO:   category_encoders: 2.7.0
2025-05-24 18:25:07,587:INFO:            lightgbm: 4.6.0
2025-05-24 18:25:07,587:INFO:               numba: 0.61.2
2025-05-24 18:25:07,587:INFO:            requests: 2.32.3
2025-05-24 18:25:07,587:INFO:          matplotlib: 3.7.5
2025-05-24 18:25:07,587:INFO:          scikitplot: 0.3.7
2025-05-24 18:25:07,587:INFO:         yellowbrick: 1.5
2025-05-24 18:25:07,588:INFO:              plotly: 5.24.1
2025-05-24 18:25:07,588:INFO:    plotly-resampler: Not installed
2025-05-24 18:25:07,588:INFO:             kaleido: 0.2.1
2025-05-24 18:25:07,588:INFO:           schemdraw: 0.15
2025-05-24 18:25:07,588:INFO:         statsmodels: 0.14.4
2025-05-24 18:25:07,588:INFO:              sktime: 0.26.0
2025-05-24 18:25:07,588:INFO:               tbats: 1.1.3
2025-05-24 18:25:07,588:INFO:            pmdarima: 2.0.4
2025-05-24 18:25:07,588:INFO:              psutil: 7.0.0
2025-05-24 18:25:07,588:INFO:          markupsafe: 3.0.2
2025-05-24 18:25:07,588:INFO:             pickle5: Not installed
2025-05-24 18:25:07,588:INFO:         cloudpickle: 3.1.1
2025-05-24 18:25:07,589:INFO:         deprecation: 2.1.0
2025-05-24 18:25:07,589:INFO:              xxhash: 3.5.0
2025-05-24 18:25:07,589:INFO:           wurlitzer: Not installed
2025-05-24 18:25:07,589:INFO:PyCaret optional dependencies:
2025-05-24 18:25:07,623:INFO:                shap: Not installed
2025-05-24 18:25:07,624:INFO:           interpret: Not installed
2025-05-24 18:25:07,624:INFO:                umap: Not installed
2025-05-24 18:25:07,624:INFO:     ydata_profiling: Not installed
2025-05-24 18:25:07,624:INFO:  explainerdashboard: Not installed
2025-05-24 18:25:07,624:INFO:             autoviz: Not installed
2025-05-24 18:25:07,624:INFO:           fairlearn: Not installed
2025-05-24 18:25:07,624:INFO:          deepchecks: Not installed
2025-05-24 18:25:07,624:INFO:             xgboost: Not installed
2025-05-24 18:25:07,624:INFO:            catboost: Not installed
2025-05-24 18:25:07,624:INFO:              kmodes: Not installed
2025-05-24 18:25:07,624:INFO:             mlxtend: Not installed
2025-05-24 18:25:07,624:INFO:       statsforecast: Not installed
2025-05-24 18:25:07,625:INFO:        tune_sklearn: Not installed
2025-05-24 18:25:07,625:INFO:                 ray: Not installed
2025-05-24 18:25:07,625:INFO:            hyperopt: Not installed
2025-05-24 18:25:07,625:INFO:              optuna: Not installed
2025-05-24 18:25:07,625:INFO:               skopt: Not installed
2025-05-24 18:25:07,625:INFO:              mlflow: Not installed
2025-05-24 18:25:07,625:INFO:              gradio: Not installed
2025-05-24 18:25:07,625:INFO:             fastapi: Not installed
2025-05-24 18:25:07,625:INFO:             uvicorn: Not installed
2025-05-24 18:25:07,625:INFO:              m2cgen: Not installed
2025-05-24 18:25:07,625:INFO:           evidently: Not installed
2025-05-24 18:25:07,625:INFO:               fugue: Not installed
2025-05-24 18:25:07,625:INFO:           streamlit: Not installed
2025-05-24 18:25:07,625:INFO:             prophet: Not installed
2025-05-24 18:25:07,625:INFO:None
2025-05-24 18:25:07,625:INFO:Set up data.
2025-05-24 18:25:08,712:INFO:Set up folding strategy.
2025-05-24 18:25:08,713:INFO:Set up train/test split.
2025-05-24 18:25:09,243:INFO:Set up index.
2025-05-24 18:25:09,317:INFO:Assigning column types.
2025-05-24 18:25:09,471:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-05-24 18:25:09,536:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-24 18:25:09,684:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:25:09,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-24 18:25:09,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:25:09,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,849:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-05-24 18:25:09,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:25:09,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:09,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:25:10,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,027:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-05-24 18:25:10,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:10,208:INFO:Preparing preprocessing pipeline...
2025-05-24 18:25:10,233:INFO:Set up simple imputation.
2025-05-24 18:25:10,557:INFO:Set up encoding of ordinal features.
2025-05-24 18:25:10,695:INFO:Set up encoding of categorical features.
2025-05-24 18:25:10,696:INFO:Set up variance threshold.
2025-05-24 18:25:10,696:INFO:Set up removing multicollinearity.
2025-05-24 18:25:10,696:INFO:Set up imbalanced handling.
2025-05-24 18:25:10,696:INFO:Set up column transformation.
2025-05-24 18:25:10,696:INFO:Set up feature normalization.
2025-05-24 18:25:33,505:INFO:Finished creating preprocessing pipeline.
2025-05-24 18:25:33,551:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\earap\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=42,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-05-24 18:25:33,551:INFO:Creating final display dataframe.
2025-05-24 18:25:44,449:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target               mau
2                   Target type            Binary
3           Original data shape      (750000, 12)
4        Transformed data shape      (1192900, 4)
5   Transformed train set shape       (967900, 4)
6    Transformed test set shape       (225000, 4)
7              Numeric features                 5
8          Categorical features                 6
9      Rows with missing values             16.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16       Low variance threshold               0.9
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Transformation              True
22        Transformation method       yeo-johnson
23                    Normalize              True
24             Normalize method            zscore
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              8095
2025-05-24 18:25:44,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:44,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:44,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:44,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:25:44,648:INFO:setup() successfully completed in 37.08s...............
2025-05-24 18:25:44,648:INFO:Initializing create_model()
2025-05-24 18:25:44,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026484CFFA50>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-24 18:25:44,648:INFO:Checking exceptions
2025-05-24 18:25:44,678:INFO:Importing libraries
2025-05-24 18:25:44,678:INFO:Copying training dataset
2025-05-24 18:25:45,078:INFO:Defining folds
2025-05-24 18:25:45,078:INFO:Declaring metric variables
2025-05-24 18:25:45,081:INFO:Importing untrained model
2025-05-24 18:25:45,086:INFO:Light Gradient Boosting Machine Imported successfully
2025-05-24 18:25:45,095:INFO:Starting cross validation
2025-05-24 18:25:45,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-24 18:27:32,590:INFO:Calculating mean and std
2025-05-24 18:27:32,598:INFO:Creating metrics dataframe
2025-05-24 18:27:32,641:INFO:Finalizing model
2025-05-24 18:27:44,236:INFO:[LightGBM] [Info] Number of positive: 483950, number of negative: 483950
2025-05-24 18:27:44,261:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.016697 seconds.
2025-05-24 18:27:44,261:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-05-24 18:27:44,261:INFO:[LightGBM] [Info] Total Bins 764
2025-05-24 18:27:44,263:INFO:[LightGBM] [Info] Number of data points in the train set: 967900, number of used features: 3
2025-05-24 18:27:44,274:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-05-24 18:27:50,839:INFO:Uploading results into container
2025-05-24 18:27:50,843:INFO:Uploading model into container now
2025-05-24 18:27:50,914:INFO:_master_model_container: 1
2025-05-24 18:27:50,915:INFO:_display_container: 2
2025-05-24 18:27:50,916:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-24 18:27:50,916:INFO:create_model() successfully completed......................................
2025-05-24 18:27:51,637:INFO:Initializing tune_model()
2025-05-24 18:27:51,637:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026484CFFA50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-05-24 18:27:51,637:INFO:Checking exceptions
2025-05-24 18:27:51,866:INFO:Copying training dataset
2025-05-24 18:27:52,155:INFO:Checking base model
2025-05-24 18:27:52,155:INFO:Base model : Light Gradient Boosting Machine
2025-05-24 18:27:52,162:INFO:Declaring metric variables
2025-05-24 18:27:52,166:INFO:Defining Hyperparameters
2025-05-24 18:27:52,350:INFO:Tuning with n_jobs=-1
2025-05-24 18:27:52,350:INFO:Initializing RandomizedSearchCV
2025-05-24 18:47:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:52,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:52,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:52,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:47:52,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-24 18:51:23,325:INFO:PyCaret ClassificationExperiment
2025-05-24 18:51:23,325:INFO:Logging name: clf-default-name
2025-05-24 18:51:23,325:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-05-24 18:51:23,325:INFO:version 3.3.2
2025-05-24 18:51:23,325:INFO:Initializing setup()
2025-05-24 18:51:23,325:INFO:self.USI: ac8b
2025-05-24 18:51:23,325:INFO:self._variable_keys: {'_available_plots', 'fold_generator', 'fold_shuffle_param', 'target_param', 'gpu_param', 'logging_param', 'exp_name_log', 'exp_id', 'idx', 'memory', 'is_multiclass', 'html_param', 'USI', 'pipeline', 'fix_imbalance', 'seed', '_ml_usecase', 'n_jobs_param', 'log_plots_param', 'y', 'y_test', 'gpu_n_jobs_param', 'y_train', 'X_test', 'X', 'X_train', 'data', 'fold_groups_param'}
2025-05-24 18:51:23,325:INFO:Checking environment
2025-05-24 18:51:23,325:INFO:python_version: 3.11.11
2025-05-24 18:51:23,325:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-05-24 18:51:23,325:INFO:machine: AMD64
2025-05-24 18:51:23,325:INFO:platform: Windows-10-10.0.26100-SP0
2025-05-24 18:51:23,325:INFO:Memory: svmem(total=8494747648, available=1470980096, percent=82.7, used=7023767552, free=1470980096)
2025-05-24 18:51:23,325:INFO:Physical Core: 4
2025-05-24 18:51:23,325:INFO:Logical Core: 8
2025-05-24 18:51:23,325:INFO:Checking libraries
2025-05-24 18:51:23,325:INFO:System:
2025-05-24 18:51:23,325:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-05-24 18:51:23,325:INFO:executable: c:\Users\earap\anaconda3\envs\pycaret-env\python.exe
2025-05-24 18:51:23,325:INFO:   machine: Windows-10-10.0.26100-SP0
2025-05-24 18:51:23,325:INFO:PyCaret required dependencies:
2025-05-24 18:51:23,325:INFO:                 pip: 25.1
2025-05-24 18:51:23,325:INFO:          setuptools: 78.1.1
2025-05-24 18:51:23,325:INFO:             pycaret: 3.3.2
2025-05-24 18:51:23,325:INFO:             IPython: 9.2.0
2025-05-24 18:51:23,325:INFO:          ipywidgets: 8.1.7
2025-05-24 18:51:23,325:INFO:                tqdm: 4.67.1
2025-05-24 18:51:23,325:INFO:               numpy: 1.26.4
2025-05-24 18:51:23,325:INFO:              pandas: 2.1.4
2025-05-24 18:51:23,325:INFO:              jinja2: 3.1.6
2025-05-24 18:51:23,325:INFO:               scipy: 1.11.4
2025-05-24 18:51:23,325:INFO:              joblib: 1.3.2
2025-05-24 18:51:23,325:INFO:             sklearn: 1.4.2
2025-05-24 18:51:23,325:INFO:                pyod: 2.0.5
2025-05-24 18:51:23,325:INFO:            imblearn: 0.13.0
2025-05-24 18:51:23,325:INFO:   category_encoders: 2.7.0
2025-05-24 18:51:23,325:INFO:            lightgbm: 4.6.0
2025-05-24 18:51:23,325:INFO:               numba: 0.61.2
2025-05-24 18:51:23,325:INFO:            requests: 2.32.3
2025-05-24 18:51:23,325:INFO:          matplotlib: 3.7.5
2025-05-24 18:51:23,325:INFO:          scikitplot: 0.3.7
2025-05-24 18:51:23,325:INFO:         yellowbrick: 1.5
2025-05-24 18:51:23,325:INFO:              plotly: 5.24.1
2025-05-24 18:51:23,325:INFO:    plotly-resampler: Not installed
2025-05-24 18:51:23,325:INFO:             kaleido: 0.2.1
2025-05-24 18:51:23,325:INFO:           schemdraw: 0.15
2025-05-24 18:51:23,325:INFO:         statsmodels: 0.14.4
2025-05-24 18:51:23,325:INFO:              sktime: 0.26.0
2025-05-24 18:51:23,325:INFO:               tbats: 1.1.3
2025-05-24 18:51:23,325:INFO:            pmdarima: 2.0.4
2025-05-24 18:51:23,325:INFO:              psutil: 7.0.0
2025-05-24 18:51:23,325:INFO:          markupsafe: 3.0.2
2025-05-24 18:51:23,325:INFO:             pickle5: Not installed
2025-05-24 18:51:23,325:INFO:         cloudpickle: 3.1.1
2025-05-24 18:51:23,325:INFO:         deprecation: 2.1.0
2025-05-24 18:51:23,325:INFO:              xxhash: 3.5.0
2025-05-24 18:51:23,325:INFO:           wurlitzer: Not installed
2025-05-24 18:51:23,325:INFO:PyCaret optional dependencies:
2025-05-24 18:51:23,355:INFO:                shap: Not installed
2025-05-24 18:51:23,355:INFO:           interpret: Not installed
2025-05-24 18:51:23,355:INFO:                umap: Not installed
2025-05-24 18:51:23,355:INFO:     ydata_profiling: Not installed
2025-05-24 18:51:23,355:INFO:  explainerdashboard: Not installed
2025-05-24 18:51:23,355:INFO:             autoviz: Not installed
2025-05-24 18:51:23,355:INFO:           fairlearn: Not installed
2025-05-24 18:51:23,355:INFO:          deepchecks: Not installed
2025-05-24 18:51:23,355:INFO:             xgboost: Not installed
2025-05-24 18:51:23,355:INFO:            catboost: Not installed
2025-05-24 18:51:23,355:INFO:              kmodes: Not installed
2025-05-24 18:51:23,355:INFO:             mlxtend: Not installed
2025-05-24 18:51:23,355:INFO:       statsforecast: Not installed
2025-05-24 18:51:23,355:INFO:        tune_sklearn: Not installed
2025-05-24 18:51:23,355:INFO:                 ray: Not installed
2025-05-24 18:51:23,355:INFO:            hyperopt: Not installed
2025-05-24 18:51:23,355:INFO:              optuna: Not installed
2025-05-24 18:51:23,355:INFO:               skopt: Not installed
2025-05-24 18:51:23,355:INFO:              mlflow: Not installed
2025-05-24 18:51:23,355:INFO:              gradio: Not installed
2025-05-24 18:51:23,355:INFO:             fastapi: Not installed
2025-05-24 18:51:23,355:INFO:             uvicorn: Not installed
2025-05-24 18:51:23,355:INFO:              m2cgen: Not installed
2025-05-24 18:51:23,355:INFO:           evidently: Not installed
2025-05-24 18:51:23,355:INFO:               fugue: Not installed
2025-05-24 18:51:23,355:INFO:           streamlit: Not installed
2025-05-24 18:51:23,355:INFO:             prophet: Not installed
2025-05-24 18:51:23,355:INFO:None
2025-05-24 18:51:23,355:INFO:Set up data.
2025-05-24 18:51:23,769:INFO:Set up folding strategy.
2025-05-24 18:51:23,769:INFO:Set up train/test split.
2025-05-24 18:51:24,183:INFO:Set up index.
2025-05-24 18:51:24,214:INFO:Assigning column types.
2025-05-24 18:51:24,326:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-05-24 18:51:24,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,500:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-05-24 18:51:24,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-24 18:51:24,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,657:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-05-24 18:51:24,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:24,816:INFO:Preparing preprocessing pipeline...
2025-05-24 18:51:24,832:INFO:Set up simple imputation.
2025-05-24 18:51:25,006:INFO:Set up encoding of ordinal features.
2025-05-24 18:51:25,134:INFO:Set up encoding of categorical features.
2025-05-24 18:51:25,134:INFO:Set up variance threshold.
2025-05-24 18:51:25,134:INFO:Set up removing multicollinearity.
2025-05-24 18:51:25,134:INFO:Set up imbalanced handling.
2025-05-24 18:51:25,134:INFO:Set up column transformation.
2025-05-24 18:51:25,134:INFO:Set up feature normalization.
2025-05-24 18:51:29,036:INFO:Finished creating preprocessing pipeline.
2025-05-24 18:51:29,072:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\earap\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=42,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-05-24 18:51:29,072:INFO:Creating final display dataframe.
2025-05-24 18:51:32,134:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target               mau
2                   Target type            Binary
3           Original data shape      (750000, 12)
4        Transformed data shape      (1192900, 4)
5   Transformed train set shape       (967900, 4)
6    Transformed test set shape       (225000, 4)
7              Numeric features                 5
8          Categorical features                 6
9      Rows with missing values             16.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16       Low variance threshold               0.9
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Transformation              True
22        Transformation method       yeo-johnson
23                    Normalize              True
24             Normalize method            zscore
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              ac8b
2025-05-24 18:51:32,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:32,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:32,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:32,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-24 18:51:32,294:INFO:setup() successfully completed in 9.04s...............
2025-05-24 18:51:32,294:INFO:Initializing create_model()
2025-05-24 18:51:32,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-24 18:51:32,294:INFO:Checking exceptions
2025-05-24 18:51:32,310:INFO:Importing libraries
2025-05-24 18:51:32,310:INFO:Copying training dataset
2025-05-24 18:51:32,611:INFO:Defining folds
2025-05-24 18:51:32,611:INFO:Declaring metric variables
2025-05-24 18:51:32,611:INFO:Importing untrained model
2025-05-24 18:51:32,611:INFO:Light Gradient Boosting Machine Imported successfully
2025-05-24 18:51:32,627:INFO:Starting cross validation
2025-05-24 18:51:32,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-24 18:52:50,234:INFO:Calculating mean and std
2025-05-24 18:52:50,234:INFO:Creating metrics dataframe
2025-05-24 18:52:50,238:INFO:Finalizing model
2025-05-24 18:52:59,371:INFO:[LightGBM] [Info] Number of positive: 483950, number of negative: 483950
2025-05-24 18:52:59,404:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.023356 seconds.
2025-05-24 18:52:59,406:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-05-24 18:52:59,406:INFO:[LightGBM] [Info] Total Bins 764
2025-05-24 18:52:59,406:INFO:[LightGBM] [Info] Number of data points in the train set: 967900, number of used features: 3
2025-05-24 18:52:59,417:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-05-24 18:53:03,029:INFO:Uploading results into container
2025-05-24 18:53:03,031:INFO:Uploading model into container now
2025-05-24 18:53:03,070:INFO:_master_model_container: 1
2025-05-24 18:53:03,070:INFO:_display_container: 2
2025-05-24 18:53:03,072:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-24 18:53:03,072:INFO:create_model() successfully completed......................................
2025-05-24 18:53:03,547:INFO:Initializing tune_model()
2025-05-24 18:53:03,547:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-05-24 18:53:03,547:INFO:Checking exceptions
2025-05-24 18:53:03,730:INFO:Copying training dataset
2025-05-24 18:53:03,930:INFO:Checking base model
2025-05-24 18:53:03,930:INFO:Base model : Light Gradient Boosting Machine
2025-05-24 18:53:03,930:INFO:Declaring metric variables
2025-05-24 18:53:03,947:INFO:Defining Hyperparameters
2025-05-24 18:53:04,047:INFO:Tuning with n_jobs=-1
2025-05-24 18:53:04,047:INFO:Initializing RandomizedSearchCV
2025-05-24 19:06:45,370:INFO:best_params: {'actual_estimator__reg_lambda': 0.05, 'actual_estimator__reg_alpha': 3, 'actual_estimator__num_leaves': 4, 'actual_estimator__n_estimators': 20, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 96, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 0, 'actual_estimator__bagging_fraction': 0.6}
2025-05-24 19:06:45,387:INFO:Hyperparameter search completed
2025-05-24 19:06:45,388:INFO:SubProcess create_model() called ==================================
2025-05-24 19:06:45,390:INFO:Initializing create_model()
2025-05-24 19:06:45,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B24F90E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.05, 'reg_alpha': 3, 'num_leaves': 4, 'n_estimators': 20, 'min_split_gain': 0.4, 'min_child_samples': 96, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 0, 'bagging_fraction': 0.6})
2025-05-24 19:06:45,390:INFO:Checking exceptions
2025-05-24 19:06:45,390:INFO:Importing libraries
2025-05-24 19:06:45,390:INFO:Copying training dataset
2025-05-24 19:06:45,750:INFO:Defining folds
2025-05-24 19:06:45,750:INFO:Declaring metric variables
2025-05-24 19:06:45,750:INFO:Importing untrained model
2025-05-24 19:06:45,750:INFO:Declaring custom model
2025-05-24 19:06:45,761:INFO:Light Gradient Boosting Machine Imported successfully
2025-05-24 19:06:45,768:INFO:Starting cross validation
2025-05-24 19:06:45,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-24 19:07:26,192:INFO:Calculating mean and std
2025-05-24 19:07:26,192:INFO:Creating metrics dataframe
2025-05-24 19:07:26,208:INFO:Finalizing model
2025-05-24 19:07:35,670:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-05-24 19:07:35,670:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-05-24 19:07:35,670:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2025-05-24 19:07:35,859:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-05-24 19:07:35,859:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2025-05-24 19:07:35,860:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2025-05-24 19:07:35,862:INFO:[LightGBM] [Info] Number of positive: 483950, number of negative: 483950
2025-05-24 19:07:35,891:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.020790 seconds.
2025-05-24 19:07:35,891:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-05-24 19:07:35,891:INFO:[LightGBM] [Info] Total Bins 764
2025-05-24 19:07:35,891:INFO:[LightGBM] [Info] Number of data points in the train set: 967900, number of used features: 3
2025-05-24 19:07:35,899:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-05-24 19:07:36,408:INFO:Uploading results into container
2025-05-24 19:07:36,410:INFO:Uploading model into container now
2025-05-24 19:07:36,414:INFO:_master_model_container: 2
2025-05-24 19:07:36,414:INFO:_display_container: 3
2025-05-24 19:07:36,416:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-24 19:07:36,416:INFO:create_model() successfully completed......................................
2025-05-24 19:07:36,786:INFO:SubProcess create_model() end ==================================
2025-05-24 19:07:36,786:INFO:choose_better activated
2025-05-24 19:07:36,788:INFO:SubProcess create_model() called ==================================
2025-05-24 19:07:36,788:INFO:Initializing create_model()
2025-05-24 19:07:36,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-24 19:07:36,788:INFO:Checking exceptions
2025-05-24 19:07:36,788:INFO:Importing libraries
2025-05-24 19:07:36,788:INFO:Copying training dataset
2025-05-24 19:07:37,155:INFO:Defining folds
2025-05-24 19:07:37,155:INFO:Declaring metric variables
2025-05-24 19:07:37,155:INFO:Importing untrained model
2025-05-24 19:07:37,155:INFO:Declaring custom model
2025-05-24 19:07:37,156:INFO:Light Gradient Boosting Machine Imported successfully
2025-05-24 19:07:37,157:INFO:Starting cross validation
2025-05-24 19:07:37,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-24 19:08:44,329:INFO:Calculating mean and std
2025-05-24 19:08:44,331:INFO:Creating metrics dataframe
2025-05-24 19:08:44,333:INFO:Finalizing model
2025-05-24 19:08:53,543:INFO:[LightGBM] [Info] Number of positive: 483950, number of negative: 483950
2025-05-24 19:08:53,566:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.006106 seconds.
2025-05-24 19:08:53,566:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-05-24 19:08:53,566:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-05-24 19:08:53,566:INFO:[LightGBM] [Info] Total Bins 764
2025-05-24 19:08:53,568:INFO:[LightGBM] [Info] Number of data points in the train set: 967900, number of used features: 3
2025-05-24 19:08:53,576:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-05-24 19:08:57,911:INFO:Uploading results into container
2025-05-24 19:08:57,913:INFO:Uploading model into container now
2025-05-24 19:08:57,914:INFO:_master_model_container: 3
2025-05-24 19:08:57,914:INFO:_display_container: 4
2025-05-24 19:08:57,915:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-24 19:08:57,915:INFO:create_model() successfully completed......................................
2025-05-24 19:08:58,049:INFO:SubProcess create_model() end ==================================
2025-05-24 19:08:58,049:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.7774
2025-05-24 19:08:58,063:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.7808
2025-05-24 19:08:58,063:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-05-24 19:08:58,063:INFO:choose_better completed
2025-05-24 19:08:58,065:INFO:_master_model_container: 3
2025-05-24 19:08:58,065:INFO:_display_container: 3
2025-05-24 19:08:58,065:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-24 19:08:58,065:INFO:tune_model() successfully completed......................................
2025-05-24 19:08:58,177:INFO:Initializing evaluate_model()
2025-05-24 19:08:58,177:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-05-24 19:08:58,297:INFO:Initializing plot_model()
2025-05-24 19:08:58,297:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B24FC3750>, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=0, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=20, n_jobs=-1, num_leaves=4, objective=None,
               random_state=42, reg_alpha=3, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-24 19:08:58,297:INFO:Checking exceptions
2025-05-24 19:08:58,400:INFO:Preloading libraries
2025-05-24 19:08:58,400:INFO:Copying training dataset
2025-05-24 19:08:58,400:INFO:Plot type: pipeline
2025-05-24 19:08:58,848:INFO:Visual Rendered Successfully
2025-05-24 19:08:58,945:INFO:plot_model() successfully completed......................................
